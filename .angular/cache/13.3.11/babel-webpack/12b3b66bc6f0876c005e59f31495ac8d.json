{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CrudService = /*#__PURE__*/(() => {\n  class CrudService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.baseUrl = environment.baseUrl;\n      this._user = JSON.parse(localStorage.getItem(\"user\"));\n    }\n\n    get user() {\n      return this._user;\n    }\n\n    read() {\n      const headers = {\n        \"x-auth-token\": this.user.token\n      };\n      return this.httpClient.get(`${this.baseUrl}/task/read`, {\n        headers\n      });\n    }\n\n    delete(id) {\n      const headers = {\n        \"x-auth-token\": this.user.token\n      };\n      return this.httpClient.delete(`${this.baseUrl}/task/delete/${id}`, {\n        headers\n      });\n    }\n\n    create(value) {\n      const headers = {\n        \"x-auth-token\": this.user.token\n      };\n      return this.httpClient.post(`${this.baseUrl}/task/create/`, {\n        nombre: value\n      }, {\n        headers\n      });\n    }\n\n    update(id, value) {\n      const headers = {\n        \"x-auth-token\": this.user.token\n      };\n      return this.httpClient.put(`${this.baseUrl}/task/update/${id}`, {\n        nombre: value\n      }, {\n        headers\n      });\n    }\n\n  }\n\n  CrudService.ɵfac = function CrudService_Factory(t) {\n    return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CrudService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CrudService,\n    factory: CrudService.ɵfac,\n    providedIn: 'root'\n  });\n  return CrudService;\n})();","map":null,"metadata":{},"sourceType":"module"}