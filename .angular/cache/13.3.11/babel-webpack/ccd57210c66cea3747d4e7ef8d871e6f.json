{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/crud.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction MainTaskComponent_tr_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function MainTaskComponent_tr_32_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const task_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.update(task_r1);\n    });\n    i0.ɵɵtext(5, \" Actualizar\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"td\")(7, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function MainTaskComponent_tr_32_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const task_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.delete(task_r1._id);\n    });\n    i0.ɵɵtext(8, \" Eliminar\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.nombre);\n  }\n}\n\nexport let MainTaskComponent = /*#__PURE__*/(() => {\n  class MainTaskComponent {\n    constructor(crudService, router, formBuilder) {\n      this.crudService = crudService;\n      this.router = router;\n      this.formBuilder = formBuilder;\n      this.tasks = [];\n      this.newTask = \"\";\n      this.miFormulario = this.formBuilder.group({\n        newTask: ['']\n      });\n    }\n\n    ngOnInit() {\n      this.user = this.crudService.user;\n      this.crudService.read().subscribe(res => {\n        this.tasks = res.tareas;\n      });\n    }\n\n    create() {\n      this.crudService.create(this.miFormulario.value.newTask).subscribe(response => {\n        this.miFormulario.reset();\n        this.crudService.read().subscribe(res => {\n          this.tasks = res.tareas;\n        });\n      });\n    }\n\n    update(task) {\n      const {\n        _id,\n        nombre\n      } = task;\n      this.router.navigateByUrl(`/task/${_id}/${nombre}`);\n    }\n\n    delete(id) {\n      this.crudService.delete(id).subscribe(response => {\n        this.crudService.read().subscribe(res => {\n          this.tasks = res.tareas;\n        });\n      });\n    }\n\n    logout() {\n      localStorage.clear();\n      this.router.navigateByUrl(\"/auth\");\n    }\n\n  }\n\n  MainTaskComponent.ɵfac = function MainTaskComponent_Factory(t) {\n    return new (t || MainTaskComponent)(i0.ɵɵdirectiveInject(i1.CrudService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n\n  MainTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MainTaskComponent,\n    selectors: [[\"app-main-task\"]],\n    decls: 33,\n    vars: 2,\n    consts: [[1, \"nav-wrapper\"], [1, \"brand-logo\"], [\"id\", \"nav-mobile\", 1, \"right\", \"hide-on-med-and-down\"], [1, \"btn\", \"waves-effect\", \"waves-light\", \"blue\", 3, \"click\"], [1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"input-field\", \"col\", \"s9\"], [\"formControlName\", \"newTask\", \"id\", \"create\", \"type\", \"text\", 1, \"validate\"], [\"for\", \"create\", 1, \"active\"], [1, \"input-field\", \"col\", \"s3\"], [1, \"btn\", \"waves-effect\", \"waves-light\", \"blue\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"waves-effect\", \"waves-light\", \"amber\", \"darken-4\", 3, \"click\"], [1, \"btn\", \"waves-effect\", \"waves-light\", \"red\", 3, \"click\"]],\n    template: function MainTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\")(1, \"div\", 0)(2, \"span\", 1);\n        i0.ɵɵtext(3, \"MEAN Task App\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ul\", 2)(5, \"li\")(6, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function MainTaskComponent_Template_button_click_6_listener() {\n          return ctx.logout();\n        });\n        i0.ɵɵtext(7, \" Log out\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(8, \"div\", 4)(9, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function MainTaskComponent_Template_form_ngSubmit_9_listener() {\n          return ctx.create();\n        });\n        i0.ɵɵelementStart(10, \"div\", 6)(11, \"h3\");\n        i0.ɵɵtext(12, \"Create new task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"hr\");\n        i0.ɵɵelementStart(14, \"div\", 7);\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵelementStart(16, \"label\", 9);\n        i0.ɵɵtext(17, \"New task\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"div\", 6)(19, \"div\", 10)(20, \"button\", 11);\n        i0.ɵɵtext(21, \" Create \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(22, \"table\")(23, \"thead\")(24, \"tr\")(25, \"th\");\n        i0.ɵɵtext(26, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"th\");\n        i0.ɵɵtext(28, \"Actualizar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"th\");\n        i0.ɵɵtext(30, \"Eliminar\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(31, \"tbody\");\n        i0.ɵɵtemplate(32, MainTaskComponent_tr_32_Template, 9, 1, \"tr\", 12);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formGroup\", ctx.miFormulario);\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i4.NgForOf],\n    styles: [\"\"]\n  });\n  return MainTaskComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}