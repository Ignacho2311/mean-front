{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/auth.service\";\n\nconst _c0 = function () {\n  return [\"/auth/login\"];\n};\n\nexport let RegisterScreenComponent = /*#__PURE__*/(() => {\n  class RegisterScreenComponent {\n    constructor(fb, router, authService) {\n      this.fb = fb;\n      this.router = router;\n      this.authService = authService;\n      this.miFormulario = this.fb.group({\n        username: [\"test8\", [Validators.required, Validators.minLength(3)]],\n        email: [\"test8@mail.com\", [Validators.required, Validators.email]],\n        password: [\"123456\", [Validators.required, Validators.minLength(6)]],\n        password2: [\"123456\", [Validators.required, Validators.minLength(6)]]\n      });\n    }\n\n    ngOnInit() {}\n\n    register() {\n      const {\n        password,\n        password2\n      } = this.miFormulario.value;\n\n      if (password === password2) {\n        this.authService.register(this.miFormulario.value).subscribe(res => {\n          if (res === true) {\n            localStorage.setItem(\"user\", JSON.stringify(this.authService.user));\n            this.router.navigateByUrl(\"/task\");\n          } else {\n            Swal.fire({\n              title: \"Error ...\",\n              text: res,\n              icon: \"error\"\n            });\n          }\n        });\n      } else {\n        Swal.fire({\n          title: \"Error ...\",\n          text: \"Las contraseñas deben ser iguales\",\n          icon: \"error\"\n        });\n      }\n    }\n\n  }\n\n  RegisterScreenComponent.ɵfac = function RegisterScreenComponent_Factory(t) {\n    return new (t || RegisterScreenComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n\n  RegisterScreenComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterScreenComponent,\n    selectors: [[\"app-register-screen\"]],\n    decls: 37,\n    vars: 3,\n    consts: [[1, \"row\", \"container\"], [1, \"col\", \"s12\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col\", \"s12\"], [1, \"input-field\", \"col\", \"s12\"], [\"formControlName\", \"username\", \"id\", \"username\", \"type\", \"text\", 1, \"validate\"], [\"for\", \"username\"], [\"data-error\", \"wrong\", \"data-success\", \"right\", 1, \"helper-text\"], [\"formControlName\", \"email\", \"id\", \"email\", \"type\", \"email\", 1, \"validate\"], [\"for\", \"email\"], [\"formControlName\", \"password\", \"id\", \"password\", \"type\", \"password\", 1, \"validate\"], [\"for\", \"password\"], [\"formControlName\", \"password2\", \"id\", \"password2\", \"type\", \"password\", 1, \"validate\"], [\"for\", \"password2\"], [3, \"routerLink\"], [1, \"waves-effect\", \"waves-light\", \"btn\"]],\n    template: function RegisterScreenComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterScreenComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.register();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"h2\");\n        i0.ɵɵtext(5, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"hr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementStart(9, \"label\", 6);\n        i0.ɵɵtext(10, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"span\", 7);\n        i0.ɵɵtext(12, \"Example name \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 4);\n        i0.ɵɵelement(14, \"input\", 8);\n        i0.ɵɵelementStart(15, \"label\", 9);\n        i0.ɵɵtext(16, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"span\", 7);\n        i0.ɵɵtext(18, \"email@example.com \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 4);\n        i0.ɵɵelement(20, \"input\", 10);\n        i0.ɵɵelementStart(21, \"label\", 11);\n        i0.ɵɵtext(22, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"span\", 7);\n        i0.ɵɵtext(24, \"Password min length 6 characters \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"div\", 4);\n        i0.ɵɵelement(26, \"input\", 12);\n        i0.ɵɵelementStart(27, \"label\", 13);\n        i0.ɵɵtext(28, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"span\", 7);\n        i0.ɵɵtext(30, \"Confirm Password \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"div\", 4)(32, \"a\", 14);\n        i0.ɵɵtext(33, \"Or Login Account\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(34, \"div\", 4)(35, \"button\", 15);\n        i0.ɵɵtext(36, \"Register\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.miFormulario);\n        i0.ɵɵadvance(31);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i2.RouterLinkWithHref],\n    styles: [\"\"]\n  });\n  return RegisterScreenComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}